{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserid","history","push","getUserProfile","getStatus","refreshProfile","prevProps","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0745a7f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__16nVP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3TWDo\",\"contact\":\"ProfileInfo_contact__3QlHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3t9Yg\",\"posts\":\"MyPosts_posts__c73PI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2SvGa\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    // let stateWithSetState = useState(true);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status}\r\n                    ></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRk9uFKDM7XSDRSHG2LyI9-q7Sg9C5500PeH0PoOahEJY-2IqJRr6hrUZ40zJeGym3dv3o&usqp=CAU'></img>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserid; //��� 20346\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserid: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter)\r\n    (ProfileContainer);"],"sourceRoot":""}