{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,YAAc,6BAA6B,aAAe,gC,sGCc/RC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,qBAAKC,IAAI,yIACT,cAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAEM,WAAtC,SAAmDV,EAAMW,WCDtDC,EANC,SAACZ,GACb,OACI,qBAAKG,UAAWC,IAAES,QAAlB,SAA4Bb,EAAMa,W,yCCApCC,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,wBAAlBD,EAlBQ,SAAChB,GACpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZd,KAAK,qBAGb,8BACI,0DCeDe,EA1BC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBT,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,OAE1E+B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEjC,OAMnF,OAAKF,EAAMoC,OAGP,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEiC,aAAlB,SACKR,IAEL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BAAMD,IACN,8BAAK,cAAC,EAAD,CAAgBf,SAbb,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOE,2BAGH,cAAC,IAAD,CAAUhC,GAAI,Y,+CCdxCiC,EAA6B,SAACd,GAAD,MAAY,CACzCS,OAAQT,EAAMe,KAAKN,S,OCeRO,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKjD,MAAMoC,OACT,cAACW,EAAD,eAAeE,KAAKjD,QADI,cAAC,IAAD,CAAUQ,GAAG,eAHT,GACX0C,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAGVjB","file":"static/js/4.f7e80e1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__225co\",\"dialogsItems\":\"Dialogs_dialogsItems__2ROaz\",\"active\":\"Dialogs_active__3CpUc\",\"messages\":\"Dialogs_messages__3d9oJ\",\"message\":\"Dialogs_message__CucZj\",\"activeLink\":\"Dialogs_activeLink__73R-8\",\"messageLeft\":\"Dialogs_messageLeft__hAvYI\",\"messageRight\":\"Dialogs_messageRight__1UNig\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRk9uFKDM7XSDRSHG2LyI9-q7Sg9C5500PeH0PoOahEJY-2IqJRr6hrUZ40zJeGym3dv3o&usqp=CAU'></img>\r\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                    placeholder='Enter your message'\r\n                    name='newMessageBody'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n// export default const AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm); �� �� ����� ��� � ����\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div><AddMessageForm onSubmit={addNewMessage}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n    (Dialogs);;"],"sourceRoot":""}